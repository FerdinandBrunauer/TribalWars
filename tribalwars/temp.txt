// Baue Truppen
						switch (VillagenameUtils.getVillageTroupType(village.getDorfname())) {
						case DEFF: {
							// 10k Speer
							// 8k Schwert
							// 2k Bogen
							if (village.isNextTroupBuildBarracksPossible()) {
								this.document = Jsoup.parse(this.browser.get("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&screen=barracks"));
								long remainingBuildTime = getRemainingBuildtime();
								if (remainingBuildTime > 0) {
									village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + remainingBuildTime));
									Logger.logMessage("\"" + village.getDorfname() + "\" baut noch bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an Truppen in der Kaserne");
								} else {
									String hWert = RegexUtils.getHWert(this.document.html());
									JSONObject troupObject = RegexUtils.getTroupJSON(this.document.html());
									int speer = 10000 - troupObject.getJSONObject("spear").getInt("all_count");
									int schwert = 8000 - troupObject.getJSONObject("sword").getInt("all_count");
									int bogen = 2000 - troupObject.getJSONObject("archer").getInt("all_count");

									if ((speer >= schwert) && (speer >= bogen)) {
										if (troupObject.getJSONObject("spear").getBoolean("requirements_met")) {
											// baue speer
											if (speer > BUILD_TROOP_PER_ORDER_BARRACKS) {
												speer = BUILD_TROOP_PER_ORDER_BARRACKS;
											}
											int max = (troupObject.getJSONObject("spear").has("max")) ? troupObject.getJSONObject("spear").getInt("max") : 0;
											if ((max >= speer) && (speer > 0)) {
												this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=barracks&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Bspear%5D=" + speer);

												village.setHolz(village.getHolz() - (speer * troupObject.getJSONObject("spear").getInt("wood")));
												village.setLehm(village.getLehm() - (speer * troupObject.getJSONObject("spear").getInt("stone")));
												village.setEisen(village.getEisen() - (speer * troupObject.getJSONObject("spear").getInt("iron")));

												long time = speer * troupObject.getJSONObject("spear").getInt("build_time") * 1000;
												village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + time));
												Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an " + speer + " Speertr\u00E4gern");
											}
										} else {
											village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
											village.addResearchOrder("spear");
											Logger.logMessage("\"" + village.getDorfname() + "\" hat Speertr\u00E4ger noch nicht erforscht!");
										}
									} else if ((schwert >= speer) && (schwert >= bogen)) {
										if (troupObject.getJSONObject("sword").getBoolean("requirements_met")) {
											// baue schwert
											if (schwert > BUILD_TROOP_PER_ORDER_BARRACKS) {
												schwert = BUILD_TROOP_PER_ORDER_BARRACKS;
											}
											int max = (troupObject.getJSONObject("sword").has("max")) ? troupObject.getJSONObject("sword").getInt("max") : 0;
											if ((max >= schwert) && (schwert > 0)) {
												this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=barracks&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Bsword%5D=" + schwert);

												village.setHolz(village.getHolz() - (schwert * troupObject.getJSONObject("sword").getInt("wood")));
												village.setLehm(village.getLehm() - (schwert * troupObject.getJSONObject("sword").getInt("stone")));
												village.setEisen(village.getEisen() - (schwert * troupObject.getJSONObject("sword").getInt("iron")));

												long time = schwert * troupObject.getJSONObject("sword").getInt("build_time") * 1000;
												village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + time));
												Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an " + schwert + " Schwertk\u00E4mpfern");
											}
										} else {
											village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
											village.addResearchOrder("sword");
											Logger.logMessage("\"" + village.getDorfname() + "\" hat Schwertk\u00E4mpfer noch nicht erforscht!");
										}
									} else if ((bogen >= speer) && (bogen >= schwert)) {
										if (troupObject.getJSONObject("archer").getBoolean("requirements_met")) {
											// baue bogen
											if (bogen > BUILD_TROOP_PER_ORDER_BARRACKS) {
												bogen = BUILD_TROOP_PER_ORDER_BARRACKS;
											}
											int max = (troupObject.getJSONObject("archer").has("max")) ? troupObject.getJSONObject("archer").getInt("max") : 0;
											if ((max >= bogen) && (bogen > 0)) {
												this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=barracks&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Barcher%5D=" + bogen);

												village.setHolz(village.getHolz() - (bogen * troupObject.getJSONObject("archer").getInt("wood")));
												village.setLehm(village.getLehm() - (bogen * troupObject.getJSONObject("archer").getInt("stone")));
												village.setEisen(village.getEisen() - (bogen * troupObject.getJSONObject("archer").getInt("iron")));

												long time = bogen * troupObject.getJSONObject("archer").getInt("build_time") * 1000;
												village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + time));
												Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an " + bogen + " Bogensch\u00FCtzen");
											}
										} else {
											village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
											village.addResearchOrder("archer");
											Logger.logMessage("\"" + village.getDorfname() + "\" hat Bogensch\u00FCtze noch nicht erforscht!");
										}
									}
								}
							}
							break;
						}
						case OFF: {
							// 6k Axt
							// 2500 Lkav
							// 300 BBogen
							// 300 Rammen
							if (village.isNextTroupBuildBarracksPossible()) {
								this.document = Jsoup.parse(this.browser.get("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&screen=barracks"));
								long remainingBuildTime = getRemainingBuildtime();
								if (remainingBuildTime > 0) {
									village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + remainingBuildTime));
									Logger.logMessage("\"" + village.getDorfname() + "\" baut noch bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an Truppen in der Kaserne");
								} else {
									JSONObject axe = RegexUtils.getTroupJSON(this.document.html()).getJSONObject("axe");
									if (axe.getBoolean("requirements_met")) {
										int max = (axe.has("max")) ? axe.getInt("max") : 0;
										int buildAxe = 6000 - axe.getInt("all_count");
										if (buildAxe > BUILD_TROOP_PER_ORDER_BARRACKS) {
											buildAxe = BUILD_TROOP_PER_ORDER_BARRACKS;
										}
										if ((max >= buildAxe) && (buildAxe > 0)) {
											String hWert = RegexUtils.getHWert(this.document.html());
											this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=barracks&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Baxe%5D=" + buildAxe);

											village.setHolz(village.getHolz() - (buildAxe * axe.getInt("wood")));
											village.setLehm(village.getLehm() - (buildAxe * axe.getInt("stone")));
											village.setEisen(village.getEisen() - (buildAxe * axe.getInt("iron")));

											long time = buildAxe * axe.getInt("build_time") * 1000;
											village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + time));
											Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildBarracks()) + " an " + buildAxe + " Axtk\u00E4mpfern");
										}
									} else {
										village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
										village.addResearchOrder("axe");
										Logger.logMessage("\"" + village.getDorfname() + "\" hat Axtk\u00E4mpfer noch nicht erforscht!");
									}
								}
							}
							if (village.isNextTroupBuildStablePossible()) {
								this.document = Jsoup.parse(this.browser.get("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&screen=stable"));
								long remainingBuildTime = getRemainingBuildtime();
								if (remainingBuildTime > 0) {
									village.setNextTroupBuildStablePossible(new Date(System.currentTimeMillis() + remainingBuildTime));
									Logger.logMessage("\"" + village.getDorfname() + "\" baut noch bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildStable()) + " an Truppen im Stall");
								} else {
									JSONObject object = RegexUtils.getTroupJSON(this.document.html());
									int lkav = 2500 - object.getJSONObject("light").getInt("all_count");
									int bbogen = 300 - object.getJSONObject("marcher").getInt("all_count");
									if (lkav > BUILD_TROOP_PER_ORDER_STABLE) {
										lkav = BUILD_TROOP_PER_ORDER_STABLE;
									}
									if (bbogen > BUILD_TROOP_PER_ORDER_STABLE) {
										bbogen = BUILD_TROOP_PER_ORDER_STABLE;
									}
									if (bbogen > 0) {
										if (object.getJSONObject("marcher").getBoolean("requirements_met")) {
											int max = (object.getJSONObject("marcher").has("max")) ? object.getJSONObject("marcher").getInt("max") : 0;
											if ((max >= bbogen) && (bbogen > 0)) {
												String hWert = RegexUtils.getHWert(this.document.html());
												this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=stable&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Bmarcher%5D=" + bbogen);

												village.setHolz(village.getHolz() - (bbogen * object.getJSONObject("marcher").getInt("wood")));
												village.setLehm(village.getLehm() - (bbogen * object.getJSONObject("marcher").getInt("stone")));
												village.setEisen(village.getEisen() - (bbogen * object.getJSONObject("marcher").getInt("iron")));

												long time = bbogen * object.getJSONObject("marcher").getInt("build_time") * 1000;
												village.setNextTroupBuildStablePossible(new Date(System.currentTimeMillis() + time));
												Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildStable()) + " an " + bbogen + " Berittene Bogensch\u00fctzen");
											}
										} else {
											village.setNextTroupBuildStablePossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
											village.addResearchOrder("light");
											Logger.logMessage("\"" + village.getDorfname() + "\" hat Berittener Bogensch\u00fctze noch nicht erforscht!");
										}
									} else {
										if (object.getJSONObject("light").getBoolean("requirements_met")) {
											int max = (object.getJSONObject("light").has("max")) ? object.getJSONObject("light").getInt("max") : 0;
											if ((max >= lkav) && (lkav > 0)) {
												String hWert = RegexUtils.getHWert(this.document.html());
												this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=stable&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Blight%5D=" + lkav);

												village.setHolz(village.getHolz() - (bbogen * object.getJSONObject("light").getInt("wood")));
												village.setLehm(village.getLehm() - (bbogen * object.getJSONObject("light").getInt("stone")));
												village.setEisen(village.getEisen() - (bbogen * object.getJSONObject("light").getInt("iron")));

												long time = lkav * object.getJSONObject("light").getInt("build_time") * 1000;
												village.setNextTroupBuildStablePossible(new Date(System.currentTimeMillis() + time));
												Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildStable()) + " an " + bbogen + " Leichter Kavallerie");
											}
										} else {
											village.setNextTroupBuildStablePossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
											village.addResearchOrder("light");
											Logger.logMessage("\"" + village.getDorfname() + "\" hat Leichte Kavallerie noch nicht erforscht!");
										}
									}
								}
							}
							if (village.isNextTroupBuildWorkshopPossible()) {
								this.document = Jsoup.parse(this.browser.get("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&screen=garage"));
								long remainingBuildTime = getRemainingBuildtime();
								if (remainingBuildTime > 0) {
									village.setNextTroupBuildWorkshopPossible(new Date(System.currentTimeMillis() + remainingBuildTime));
									Logger.logMessage("\"" + village.getDorfname() + "\" baut noch bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildWorkshop()) + " an Truppen in der Werkstatt");
								} else {
									JSONObject object = RegexUtils.getTroupJSON(this.document.html());
									if (object.getJSONObject("ram").getBoolean("requirements_met")) {
										int buildRam = 300 - object.getJSONObject("ram").getInt("all_count");
										if (buildRam > BUILD_TROOP_PER_ORDER_WORKSHOP) {
											buildRam = BUILD_TROOP_PER_ORDER_WORKSHOP;
										}
										int max = (object.getJSONObject("ram").has("max")) ? object.getJSONObject("ram").getInt("max") : 0;
										if ((max >= buildRam) && (buildRam > 0)) {
											String hWert = RegexUtils.getHWert(this.document.html());
											this.browser.post("http://dep5.die-staemme.de/game.php?village=" + village.getID() + "&ajaxaction=train&h=" + hWert + "&mode=train&screen=garage&&client_time=" + (System.currentTimeMillis() + "").substring(0, 10), "units%5Bram%5D=" + buildRam);

											village.setHolz(village.getHolz() - (buildRam * object.getJSONObject("ram").getInt("wood")));
											village.setLehm(village.getLehm() - (buildRam * object.getJSONObject("ram").getInt("stone")));
											village.setEisen(village.getEisen() - (buildRam * object.getJSONObject("ram").getInt("iron")));

											long time = buildRam * object.getJSONObject("ram").getInt("build_time") * 1000;
											village.setNextTroupBuildWorkshopPossible(new Date(System.currentTimeMillis() + time));
											Logger.logMessage("Auftrag: \"" + village.getDorfname() + "\" baut bis um " + new SimpleDateFormat("HH:mm:ss").format(village.getNextTroupBuildWorkshop()) + " an " + buildRam + " Rammb\u00F6cken");
										}
									} else {
										village.setNextTroupBuildBarracksPossible(new Date(System.currentTimeMillis() + (30 * 60 * 1000)));
										village.addResearchOrder("ram");
										Logger.logMessage("\"" + village.getDorfname() + "\" hat Rammbock noch nicht erforscht!");
									}
								}
							}
							break;
						}
						default:
							// Nichts machen
							break;
						}
						
							private long getRemainingBuildtime() {
		try {
			Elements table = this.document.getElementsByClass("trainqueue_wrap").get(0).getElementsByTag("tr");
			if (table.size() > 0) {
				table.remove(0);
				return RegexUtils.convertTimestringToMilliseconds(table.get(0).getElementsByTag("td").get(1).html());
			} else {
				return -1;
			}
		} catch (Exception e) {
			return -1;
		}
	}